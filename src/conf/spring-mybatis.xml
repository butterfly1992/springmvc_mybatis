<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
    http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <context:component-scan base-package="com.demomvc"></context:component-scan>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/addu.do" />
			<bean class="com.demomvc.adapter.HandlerInterceptor1"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 引入jdbc配置文件 -->
	<context:property-placeholder location="classpath:conf/jdbc.properties" />
	<!--定义数据源boneCP -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<!-- 检查数据库连接池中空闲连接的间隔时间 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 连接池中未使用的链接最大存活时间 -->
		<property name="idleMaxAge" value="240" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="30" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="10" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="3" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="5" />
		<!-- 设置连接池阀值 -->
		<property name="poolAvailabilityThreshold" value="10"></property>
		<!-- 连接时间 -->
		<property name="connectionTimeout" value="3000"></property>
	</bean>
	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<!-- configLocation为mybatis属性 mapperLocations为所有mapper -->
	<!-- 创建SqlSessionFactory，同时指定数据源 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mapper/*Mapper.xml" />
	</bean>
	<!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
	<bean id="mapperConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer"><!-- 扫描指定包以获取映射器 -->
		<property name="basePackage" value="com.demomvc.dao" />
	</bean>
	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.demomvc.dao" p:sqlSessionFactoryBeanName="sqlSessionFactory" />

	<!-- 对数据源进行事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	

</beans>